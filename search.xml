<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Git Guide]]></title>
    <url>%2Fyinziang%2F2018%2F01%2F08%2FGitGuide%2F</url>
    <content type="text"><![CDATA[Git版本控制关于Git版本控制的一些笔记，以及在windows下的一些常规操作 Note1. 三棵树：工作目录、暂存区域和Git仓库Working Directory &lt;-&gt; Stage(Index) &lt;-&gt; Repository(Head)工作目录：平时存放项目的地方暂存区域：一个文件，存放临时的改动，即将提交到仓库的列表信息Git仓库：最终存放版本数据的位置(HEAD指针指向最新版本) 2. 将每个版本独立保存3. Git管理的文件的三种状态 已修改(modified) 已暂存(staged) 已提交(committed) Git的工作流程一般工作流程 在工作目录中添加、修改文件 将需要进行版本管理的文件放入暂存区域 将暂存区域的文件提交到Git仓库 1.在工作目录中添加、修改文件(自己操作)1234C:\Users\Administrator\Documents\GitHub&gt;cd MyProjectC:\Users\Administrator\Documents\GitHub\MyProject&gt;git initInitialized empty Git repository in C:/Users/Administrator/Documents/GitHub/MyProject/.git/ 2.将需要进行版本管理的文件放入暂存区域(没提示信息即ok)1C:\Users\Administrator\Documents\GitHub\MyProject&gt;git add README.md 3.将暂存区域的文件提交到Git仓库commit命令 双引号内是本次提交的说明 1234C:\Users\Administrator\Documents\GitHub\MyProject&gt;git commit -m &quot;add a readme file&quot;[master (root-commit) cbdab70] add a readme file 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 README.md 实战 将工作目录的文件放到Git仓库只需要两步 -git add 文件名 -git commit -m “你干了啥，新版本注释” 查看状态1git status 显示Untracked files，工作目录新添加、修改的文件而未添加到暂存区域或提交到Git仓库 12345678C:\Users\Administrator\Documents\GitHub\MyProject&gt;git add LICENSEC:\Users\Administrator\Documents\GitHub\MyProject&gt;git statusOn branch masterChanges to be committed: (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage) new file: LICENSE 回滚1git reset HEAD 可以让最近一次提交到Git仓库的文件回到暂存区域 1git reset HEAD &lt;file&gt; 可以让file文件从Git仓库回到暂存区域 123456789101112131415161718192021222324252627282930313233343536C:\Users\Administrator\Documents\GitHub\MyProject&gt;git reset HEADC:\Users\Administrator\Documents\GitHub\MyProject&gt;git statusOn branch masterUntracked files: (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed) LICENSEnothing added to commit but untracked files present (use &quot;git add&quot; to track)C:\Users\Administrator\Documents\GitHub\MyProject&gt;git commit -m &quot;add a LICENSE file&quot;On branch masterUntracked files: LICENSEnothing added to commit but untracked files presentC:\Users\Administrator\Documents\GitHub\MyProject&gt;git add LICENSEC:\Users\Administrator\Documents\GitHub\MyProject&gt;git statusOn branch masterChanges to be committed: (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage) new file: LICENSEC:\Users\Administrator\Documents\GitHub\MyProject&gt;git commit -m &quot;add a readme file&quot;[master 9ceaa7a] add a readme file 1 file changed, 19 insertions(+) create mode 100644 LICENSEC:\Users\Administrator\Documents\GitHub\MyProject&gt;git statusOn branch masternothing to commit, working tree clean Note：红色表示在工作目录(?)；绿色表示在暂存区域，等待被提交。是否？你查看了工作目录的status，那么文件就默认到暂存区域了，add就提交到Git仓库了 用提交到Git仓库的文件，覆盖工作目录的文件变化1git checkout -- &lt;file&gt; file，如”modified： LICENSE” 查看历史提交1git log 1234567891011121314151617181920C:\Users\Administrator\Documents\GitHub\MyProject&gt;git logcommit 76b5f782d7443442233ae5e050d3c4c8f71968b7Author: 2011301060014@whu.edu.cn &lt;2011301060014@whu.edu.cn&gt;Date: Thu Nov 9 09:00:45 2017 +0800 change the LICENSE filecommit 9ceaa7aea9f293c1189d3bcaf42f653d102a905bAuthor: 2011301060014@whu.edu.cn &lt;2011301060014@whu.edu.cn&gt;Date: Wed Nov 8 21:39:24 2017 +0800 add a readme filecommit cbdab700463d0b214c6f4bb08cc6bba9d30fac41Author: 2011301060014@whu.edu.cn &lt;2011301060014@whu.edu.cn&gt;Date: Wed Nov 8 20:45:23 2017 +0800 add a readme fileC:\Users\Administrator\Documents\GitHub\MyProject&gt; 回到过去参考”reset&amp;checkout.png” 12345sequenceDiagramWorking Directory-&gt;&gt;Stage: addStage-&gt;&gt;Respository: commitRespository-&gt;&gt;Stage: resetStage-&gt;&gt;Working Directory: checkout 附录 – Windows初次使用Git前的配置在命令行模式里输入以下命令： 12-git config -- global user.name &quot;username&quot;-git config -- global user.email &quot;mail&quot; 然后输入 1git config --list 出现邮箱和用户名即ok]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Study</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[New Start]]></title>
    <url>%2Fyinziang%2F2018%2F01%2F07%2FNewStart%2F</url>
    <content type="text"><![CDATA[坑爹之路So Many Bugs !!! 1. 找不到路径已经将java文件夹设为了Source Folder，但是找不到放在根路径下的文件ac.xml，代码中不能以下面的方式访问ApplicationContext context = new ClassPathXmlApplicationContext(&quot;ac.xml&quot;); 解决办法–&gt;将文件放在Resource Folder下“正宗的Maven程序，找东西都去resource下面去找!” 2. 页面跳转 clone的项目Tomcat的路径设置不是默认的”/“。不是Project Structure的路径！ Web项目的路径 主要不是Project Structure Tomcat的路径设置]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Study</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fyinziang%2F2018%2F01%2F07%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Study</tag>
      </tags>
  </entry>
</search>
